{"version":3,"sources":["../../../../src/infrastructure/persistence/project-report/parser.ts"],"sourcesContent":["import { Prisma } from '@prisma/client';\nimport { format } from 'date-fns';\n\nimport {\n  File,\n  ProgressCheckReport,\n  ProjectBudgetChange,\n  ProjectCloseReport,\n  ProjectCommonReport,\n  ProjectMeetingReport,\n  ProjectStatusUpdateReport,\n  ProjectWorkerReport,\n} from '../../../domain/entity';\nimport { IBaseProjectReport } from '../../../domain/entity/BaseProjectReport';\nimport {\n  BillingClientId,\n  ChangeReasonCode,\n  CloseReportChecklist,\n  ConsumedWorkersPercentage,\n  CreateUserId,\n  ExecutionBudgetUnitId,\n  FileName,\n  FilePath,\n  ProgressReportData,\n  ProjectId,\n  ProjectReportId,\n  ProjectStatusCode,\n  ReportText,\n  ReportTypeCode,\n  Title,\n  TotalPerformancePercentage,\n  UploadUserId,\n  WorkerId,\n  YEAR_MONTH_DAY_FORMAT,\n  YearMonthDay,\n} from '../../../domain/value';\nimport { CustomLogger } from '../../../utility';\n\nexport type ProjectReportRecord = {\n  project_report_id: string;\n  create_user_id: string;\n  report_date: Date;\n  project_id: string;\n  form_attached_files: FileRecord[];\n  progress_check_report: ProgressCheckReportRecord | null;\n  project_budget_change: ProjectBudgetChangeRecord | null;\n  project_close_report: ProjectCloseReportRecord | null;\n  project_common_report: ProjectCommonReportRecord | null;\n  project_meeting_report: ProjectMeetingReportRecord | null;\n  project_status_update_report: ProjectStatusUpdateReportRecord | null;\n  project_worker_report: ProjectWorkerReportRecord | null;\n};\n\nexport type FileRecord = {\n  form_attached_file_id: string;\n  project_report_id: string;\n  file_name: string;\n  file_path: string;\n  created_at: Date;\n  updated_at: Date;\n  upload_user_id: string;\n};\n\nexport type ProgressCheckReportRecord = {\n  progress_check_report_id: string;\n  project_report_id: string;\n  execution_budget_unit_id: string;\n  progress_report_data: Prisma.JsonValue;\n  total_performance_percentage: Prisma.Decimal;\n  created_at: Date;\n  updated_at: Date;\n  consumed_workers_percentage: Prisma.Decimal;\n  title: string | null;\n  report_text: string | null;\n  progress_check_reported_worker: ProgressCheckReportedWorkerRecord[];\n};\n\nexport type ProjectBudgetChangeRecord = {\n  project_budget_id: string;\n  change_reason_code: string;\n  created_at: Date;\n  updated_at: Date;\n  project_report_id: string;\n  billing_client_id: string;\n  title: string | null;\n  report_text: string | null;\n};\n\nexport type ProjectCloseReportRecord = {\n  project_close_report_id: string;\n  close_report_checklist: Prisma.JsonValue;\n  created_at: Date;\n  updated_at: Date;\n  title: string | null;\n  report_text: string | null;\n};\n\nexport type ProjectCommonReportRecord = {\n  project_common_report_id: string;\n  created_at: Date;\n  updated_at: Date;\n  title: string | null;\n  report_text: string | null;\n};\n\nexport type ProjectMeetingReportRecord = {\n  project_meeting_report_id: string;\n  created_at: Date;\n  updated_at: Date;\n  title: string | null;\n  report_text: string | null;\n};\n\nexport type ProjectStatusUpdateReportRecord = {\n  project_status_update_report_id: string;\n  created_at: Date;\n  updated_at: Date;\n  project_status_code: string;\n  title: string | null;\n  report_text: string | null;\n};\n\nexport type ProjectWorkerReportRecord = {\n  project_worker_report_id: string;\n  report_type_code: string | null;\n  title: string | null;\n  report_text: string | null;\n  created_at: Date;\n  updated_at: Date;\n  reported_workers: ReportedWorkerRecord[];\n};\n\nexport type ReportedWorkerRecord = {\n  reported_workers_id: string;\n  worker_id: string;\n  created_at: Date;\n  updated_at: Date;\n};\n\nexport type ProgressCheckReportedWorkerRecord = {\n  progress_check_reported_worker_id: string;\n  progress_check_report_id: string;\n  created_at: Date;\n  updated_at: Date;\n  worker_id: string;\n};\n\nexport class ReportParser {\n  constructor(readonly logger: CustomLogger) {}\n  private convertToBaseProjectArgs(\n    record: ProjectReportRecord,\n  ): IBaseProjectReport {\n    return {\n      id: ProjectReportId.from(record.project_report_id),\n      createUserId: CreateUserId.from(record.create_user_id),\n      reportDate: YearMonthDay.from(\n        format(record.report_date, YEAR_MONTH_DAY_FORMAT),\n      ),\n      projectId: ProjectId.from(record.project_id),\n      files: record.form_attached_files.map(\n        (file) =>\n          new File({\n            name: FileName.from(file.file_name),\n            path: FilePath.from(file.file_path),\n            uploadUserId: UploadUserId.from(file.upload_user_id),\n          }),\n      ),\n    };\n  }\n\n  convertToProgressCheckReportEntity(\n    record: ProjectReportRecord,\n  ): ProgressCheckReport {\n    return new ProgressCheckReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.progress_check_report!.title),\n      reportText: ReportText.from(record.progress_check_report!.report_text),\n      executionBudgetUnitId: ExecutionBudgetUnitId.from(\n        record.progress_check_report!.execution_budget_unit_id,\n      ),\n      progressReportData: ProgressReportData.from(\n        record.progress_check_report!.progress_report_data as object,\n      ),\n      totalPerformancePercentage: TotalPerformancePercentage.from(\n        record.progress_check_report!.total_performance_percentage.toString(),\n      ),\n      consumedWorkersPercentage: ConsumedWorkersPercentage.from(\n        record.progress_check_report!.consumed_workers_percentage.toString(),\n      ),\n      workerIds:\n        record.progress_check_report!.progress_check_reported_worker.map(\n          (worker) => WorkerId.from(worker.worker_id),\n        ),\n    });\n  }\n  convertToProjectBudgetChangeEntity(\n    record: ProjectReportRecord,\n  ): ProjectBudgetChange {\n    return new ProjectBudgetChange({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_budget_change!.title),\n      reportText: ReportText.from(record.project_budget_change!.report_text),\n      changeReasonCode: ChangeReasonCode.from(\n        record.project_budget_change!.change_reason_code,\n      ),\n      billingClientId: BillingClientId.from(\n        record.project_budget_change!.billing_client_id,\n      ),\n    });\n  }\n  convertToProjectCloseReportEntity(\n    record: ProjectReportRecord,\n  ): ProjectCloseReport {\n    return new ProjectCloseReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_close_report!.title),\n      reportText: ReportText.from(record.project_close_report!.report_text),\n      closeReportChecklist: CloseReportChecklist.from(\n        record.project_close_report!.close_report_checklist as object,\n      ),\n    });\n  }\n  convertToProjectCommonReportEntity(\n    record: ProjectReportRecord,\n  ): ProjectCommonReport {\n    return new ProjectCommonReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_common_report!.title),\n      reportText: ReportText.from(record.project_common_report!.report_text),\n    });\n  }\n  convertToProjectMeetingReportEntity(\n    record: ProjectReportRecord,\n  ): ProjectMeetingReport {\n    return new ProjectMeetingReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_meeting_report!.title),\n      reportText: ReportText.from(record.project_meeting_report!.report_text),\n    });\n  }\n  convertToProjectStatusUpdateReportEntity(\n    record: ProjectReportRecord,\n  ): ProjectStatusUpdateReport {\n    return new ProjectStatusUpdateReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_status_update_report!.title),\n      reportText: ReportText.from(\n        record.project_status_update_report!.report_text,\n      ),\n      projectStatusCode: ProjectStatusCode.from(\n        record.project_status_update_report!.project_status_code,\n      ),\n    });\n  }\n  convertToProjectWorkerReportEntity(\n    record: ProjectReportRecord,\n  ): ProjectWorkerReport {\n    return new ProjectWorkerReport({\n      ...this.convertToBaseProjectArgs(record),\n      title: Title.from(record.project_worker_report!.title),\n      reportText: ReportText.from(record.project_worker_report!.report_text),\n      reportTypeCode: ReportTypeCode.from(\n        record.project_worker_report!.report_type_code,\n      ),\n      workerIds: record.project_worker_report!.reported_workers.map((worker) =>\n        WorkerId.from(worker.worker_id),\n      ),\n    });\n  }\n}\n"],"names":["format","File","ProgressCheckReport","ProjectBudgetChange","ProjectCloseReport","ProjectCommonReport","ProjectMeetingReport","ProjectStatusUpdateReport","ProjectWorkerReport","BillingClientId","ChangeReasonCode","CloseReportChecklist","ConsumedWorkersPercentage","CreateUserId","ExecutionBudgetUnitId","FileName","FilePath","ProgressReportData","ProjectId","ProjectReportId","ProjectStatusCode","ReportText","ReportTypeCode","Title","TotalPerformancePercentage","UploadUserId","WorkerId","YEAR_MONTH_DAY_FORMAT","YearMonthDay","ReportParser","convertToBaseProjectArgs","record","id","from","project_report_id","createUserId","create_user_id","reportDate","report_date","projectId","project_id","files","form_attached_files","map","file","name","file_name","path","file_path","uploadUserId","upload_user_id","convertToProgressCheckReportEntity","title","progress_check_report","reportText","report_text","executionBudgetUnitId","execution_budget_unit_id","progressReportData","progress_report_data","totalPerformancePercentage","total_performance_percentage","toString","consumedWorkersPercentage","consumed_workers_percentage","workerIds","progress_check_reported_worker","worker","worker_id","convertToProjectBudgetChangeEntity","project_budget_change","changeReasonCode","change_reason_code","billingClientId","billing_client_id","convertToProjectCloseReportEntity","project_close_report","closeReportChecklist","close_report_checklist","convertToProjectCommonReportEntity","project_common_report","convertToProjectMeetingReportEntity","project_meeting_report","convertToProjectStatusUpdateReportEntity","project_status_update_report","projectStatusCode","project_status_code","convertToProjectWorkerReportEntity","project_worker_report","reportTypeCode","report_type_code","reported_workers","constructor","logger"],"mappings":"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"}