{"version":3,"sources":["../../../../src/presentation/report/controller/update.controller.ts"],"sourcesContent":["import { Body, Controller, HttpCode, Param, Patch } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport {\n  ProgressCheckReportScenario,\n  ProjectBudgetChangeScenario,\n  ProjectCloseReportScenario,\n  ProjectCommonReportScenario,\n  ProjectMeetingReportScenario,\n  ProjectStatusUpdateReportScenario,\n  ProjectWorkerReportScenario,\n} from '../../../application/scenario';\nimport { CustomLogger } from '../../../utility';\nimport {\n  UpdateProgressCheckReportRequest,\n  UpdateProjectBudgetChangeRequest,\n  UpdateProjectCloseReportRequest,\n  UpdateProjectCommonReportRequest,\n  UpdateProjectMeetingReportRequest,\n  UpdateProjectStatusUpdateReportRequest,\n  UpdateProjectWorkerReportRequest,\n} from '../request';\nimport {\n  ProgressCheckReportResponse,\n  ProjectBudgetChangeResponse,\n  ProjectCloseReportResponse,\n  ProjectCommonReportResponse,\n  ProjectMeetingReportResponse,\n  ProjectStatusUpdateReportResponse,\n  ProjectWorkerReportResponse,\n} from '../response';\n\n@ApiTags('Site diary')\n@Controller('reports')\nexport class ReportUpdateController {\n  constructor(\n    readonly logger: CustomLogger,\n    readonly progressCheckReportScenario: ProgressCheckReportScenario,\n    readonly projectBudgetChangeScenario: ProjectBudgetChangeScenario,\n    readonly projectCloseReportScenario: ProjectCloseReportScenario,\n    readonly projectCommonReportScenario: ProjectCommonReportScenario,\n    readonly projectMeetingReportScenario: ProjectMeetingReportScenario,\n    readonly projectStatusUpdateReportScenario: ProjectStatusUpdateReportScenario,\n    readonly projectWorkerReportScenario: ProjectWorkerReportScenario,\n  ) {\n    this.logger.setContext(ReportUpdateController.name);\n  }\n\n  @Patch('project-common-reports/:id')\n  @ApiOperation({\n    description: 'Update project common report',\n  })\n  @ApiOkResponse({\n    type: ProjectCommonReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectCommonReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectCommonReportRequest,\n  ): Promise<ProjectCommonReportResponse> {\n    return await this.projectCommonReportScenario.update(id, body);\n  }\n\n  @Patch('progress-check-reports/:id')\n  @ApiOperation({\n    description: 'Update progress check report',\n  })\n  @ApiOkResponse({\n    type: ProgressCheckReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProgressCheckReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProgressCheckReportRequest,\n  ): Promise<ProgressCheckReportResponse> {\n    return await this.progressCheckReportScenario.update(id, body);\n  }\n\n  @Patch('project-budget-change-reports/:id')\n  @ApiOperation({\n    description: 'Update project budget change report',\n  })\n  @ApiOkResponse({\n    type: ProjectBudgetChangeResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectBudgetChangeReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectBudgetChangeRequest,\n  ): Promise<ProjectBudgetChangeResponse> {\n    return await this.projectBudgetChangeScenario.update(id, body);\n  }\n\n  @Patch('project-close-reports/:id')\n  @ApiOperation({\n    description: 'Update project close report',\n  })\n  @ApiOkResponse({\n    type: ProjectCloseReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectCloseReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectCloseReportRequest,\n  ): Promise<ProjectCloseReportResponse> {\n    return this.projectCloseReportScenario.update(id, body);\n  }\n\n  @Patch('project-meeting-reports/:id')\n  @ApiOperation({\n    description: 'Update project meeting report',\n  })\n  @ApiOkResponse({\n    type: ProjectMeetingReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectMeetingReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectMeetingReportRequest,\n  ): Promise<ProjectMeetingReportResponse> {\n    return await this.projectMeetingReportScenario.update(id, body);\n  }\n\n  @Patch('project-status-update-reports/:id')\n  @ApiOperation({\n    description: 'Update project status update report',\n  })\n  @ApiOkResponse({\n    type: ProjectStatusUpdateReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectStatusUpdateReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectStatusUpdateReportRequest,\n  ): Promise<ProjectStatusUpdateReportResponse> {\n    return this.projectStatusUpdateReportScenario.update(id, body);\n  }\n\n  @Patch('project-worker-reports/:id')\n  @ApiOperation({\n    description: 'Update project worker report',\n  })\n  @ApiOkResponse({\n    type: ProjectWorkerReportResponse,\n  })\n  @ApiNotFoundResponse({\n    description: 'Report not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async updateProjectWorkerReport(\n    @Param('id') id: string,\n    @Body() body: UpdateProjectWorkerReportRequest,\n  ): Promise<ProjectWorkerReportResponse> {\n    return await this.projectWorkerReportScenario.update(id, body);\n  }\n}\n"],"names":["Body","Controller","HttpCode","Param","Patch","ApiBadRequestResponse","ApiInternalServerErrorResponse","ApiNotFoundResponse","ApiOkResponse","ApiOperation","ApiTags","ApiUnauthorizedResponse","ProgressCheckReportScenario","ProjectBudgetChangeScenario","ProjectCloseReportScenario","ProjectCommonReportScenario","ProjectMeetingReportScenario","ProjectStatusUpdateReportScenario","ProjectWorkerReportScenario","CustomLogger","UpdateProgressCheckReportRequest","UpdateProjectBudgetChangeRequest","UpdateProjectCloseReportRequest","UpdateProjectCommonReportRequest","UpdateProjectMeetingReportRequest","UpdateProjectStatusUpdateReportRequest","UpdateProjectWorkerReportRequest","ProgressCheckReportResponse","ProjectBudgetChangeResponse","ProjectCloseReportResponse","ProjectCommonReportResponse","ProjectMeetingReportResponse","ProjectStatusUpdateReportResponse","ProjectWorkerReportResponse","ReportUpdateController","updateProjectCommonReport","id","body","projectCommonReportScenario","update","updateProgressCheckReport","progressCheckReportScenario","updateProjectBudgetChangeReport","projectBudgetChangeScenario","updateProjectCloseReport","projectCloseReportScenario","updateProjectMeetingReport","projectMeetingReportScenario","updateProjectStatusUpdateReport","projectStatusUpdateReportScenario","updateProjectWorkerReport","projectWorkerReportScenario","constructor","logger","setContext","name","description","type"],"mappings":"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"}