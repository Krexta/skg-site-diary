{"version":3,"sources":["../../../../src/presentation/report/controller/create.controller.ts"],"sourcesContent":["import { Body, Controller, HttpCode, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiInternalServerErrorResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\n\nimport {\n  ProgressCheckReportScenario,\n  ProjectBudgetChangeScenario,\n  ProjectCloseReportScenario,\n  ProjectCommonReportScenario,\n  ProjectMeetingReportScenario,\n  ProjectStatusUpdateReportScenario,\n  ProjectWorkerReportScenario,\n} from '../../../application/scenario';\nimport { CustomLogger } from '../../../utility';\nimport {\n  CreateProgressCheckReportRequest,\n  CreateProjectBudgetChangeRequest,\n  CreateProjectCloseReportRequest,\n  CreateProjectCommonReportRequest,\n  CreateProjectMeetingReportRequest,\n  CreateProjectStatusUpdateReportRequest,\n  CreateProjectWorkerReportRequest,\n} from '../request';\nimport {\n  ProgressCheckReportResponse,\n  ProjectBudgetChangeResponse,\n  ProjectCloseReportResponse,\n  ProjectCommonReportResponse,\n  ProjectMeetingReportResponse,\n  ProjectStatusUpdateReportResponse,\n  ProjectWorkerReportResponse,\n} from '../response';\n\n@ApiTags('Site diary')\n@Controller('reports')\nexport class ReportCreateController {\n  constructor(\n    readonly logger: CustomLogger,\n    readonly progressCheckReportScenario: ProgressCheckReportScenario,\n    readonly projectBudgetChangeScenario: ProjectBudgetChangeScenario,\n    readonly projectCloseReportScenario: ProjectCloseReportScenario,\n    readonly projectCommonReportScenario: ProjectCommonReportScenario,\n    readonly projectMeetingReportScenario: ProjectMeetingReportScenario,\n    readonly projectStatusUpdateReportScenario: ProjectStatusUpdateReportScenario,\n    readonly projectWorkerReportScenario: ProjectWorkerReportScenario,\n  ) {\n    this.logger.setContext(ReportCreateController.name);\n  }\n  @Post('project-common-reports')\n  @ApiOperation({\n    description: 'Create project common report',\n  })\n  @ApiOkResponse({\n    type: ProjectCommonReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectCommonReport(\n    @Body() body: CreateProjectCommonReportRequest,\n  ): Promise<ProjectCommonReportResponse> {\n    return await this.projectCommonReportScenario.pushProjectCommonReport(body);\n  }\n\n  @Post('progress-check-reports')\n  @ApiOperation({\n    description: 'Create progress check report',\n  })\n  @ApiOkResponse({\n    type: ProgressCheckReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProgressCheckReport(\n    @Body() body: CreateProgressCheckReportRequest,\n  ): Promise<ProgressCheckReportResponse> {\n    return await this.progressCheckReportScenario.pushProgressCheckReport(body);\n  }\n\n  @Post('project-budget-change-reports')\n  @ApiOperation({\n    description: 'Create project budget change report',\n  })\n  @ApiOkResponse({\n    type: ProjectBudgetChangeResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectBudgetChangeReport(\n    @Body() body: CreateProjectBudgetChangeRequest,\n  ): Promise<ProjectBudgetChangeResponse> {\n    return await this.projectBudgetChangeScenario.pushProjectBudgetChange(body);\n  }\n\n  @Post('project-close-reports')\n  @ApiOperation({\n    description: 'Create project close report',\n  })\n  @ApiOkResponse({\n    type: ProjectCloseReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectCloseReport(\n    @Body() body: CreateProjectCloseReportRequest,\n  ): Promise<ProjectCloseReportResponse> {\n    return await this.projectCloseReportScenario.pushProjectCloseReport(body);\n  }\n\n  @Post('project-meeting-reports')\n  @ApiOperation({\n    description: 'Create project meeting report',\n  })\n  @ApiOkResponse({\n    type: ProjectMeetingReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectMeetingReport(\n    @Body() body: CreateProjectMeetingReportRequest,\n  ): Promise<ProjectMeetingReportResponse> {\n    return await this.projectMeetingReportScenario.pushProjectMeetingReport(\n      body,\n    );\n  }\n\n  @Post('project-status-update-reports')\n  @ApiOperation({\n    description: 'Create project status update report',\n  })\n  @ApiOkResponse({\n    type: ProjectStatusUpdateReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectStatusUpdateReport(\n    @Body() body: CreateProjectStatusUpdateReportRequest,\n  ): Promise<ProjectStatusUpdateReportResponse> {\n    return await this.projectStatusUpdateReportScenario.pushProjectStatusUpdateReport(\n      body,\n    );\n  }\n\n  @Post('project-worker-reports')\n  @ApiOperation({\n    description: 'Create project worker report',\n  })\n  @ApiOkResponse({\n    type: ProjectWorkerReportResponse,\n  })\n  @ApiBadRequestResponse({\n    description: 'リクエスト内容が不正',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'サーバーエラー',\n  })\n  @ApiUnauthorizedResponse({\n    description: '認証エラー',\n  })\n  @HttpCode(200)\n  async createProjectWorkerReport(\n    @Body() body: CreateProjectWorkerReportRequest,\n  ): Promise<ProjectWorkerReportResponse> {\n    return await this.projectWorkerReportScenario.pushProjectWorkerReport(body);\n  }\n}\n"],"names":["Body","Controller","HttpCode","Post","ApiBadRequestResponse","ApiInternalServerErrorResponse","ApiOkResponse","ApiOperation","ApiTags","ApiUnauthorizedResponse","ProgressCheckReportScenario","ProjectBudgetChangeScenario","ProjectCloseReportScenario","ProjectCommonReportScenario","ProjectMeetingReportScenario","ProjectStatusUpdateReportScenario","ProjectWorkerReportScenario","CustomLogger","CreateProgressCheckReportRequest","CreateProjectBudgetChangeRequest","CreateProjectCloseReportRequest","CreateProjectCommonReportRequest","CreateProjectMeetingReportRequest","CreateProjectStatusUpdateReportRequest","CreateProjectWorkerReportRequest","ProgressCheckReportResponse","ProjectBudgetChangeResponse","ProjectCloseReportResponse","ProjectCommonReportResponse","ProjectMeetingReportResponse","ProjectStatusUpdateReportResponse","ProjectWorkerReportResponse","ReportCreateController","createProjectCommonReport","body","projectCommonReportScenario","pushProjectCommonReport","createProgressCheckReport","progressCheckReportScenario","pushProgressCheckReport","createProjectBudgetChangeReport","projectBudgetChangeScenario","pushProjectBudgetChange","createProjectCloseReport","projectCloseReportScenario","pushProjectCloseReport","createProjectMeetingReport","projectMeetingReportScenario","pushProjectMeetingReport","createProjectStatusUpdateReport","projectStatusUpdateReportScenario","pushProjectStatusUpdateReport","createProjectWorkerReport","projectWorkerReportScenario","pushProjectWorkerReport","constructor","logger","setContext","name","description","type"],"mappings":"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"}