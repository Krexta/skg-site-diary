{"version":3,"sources":["../../../../src/application/scenario/project-budget-change/scenario.ts"],"sourcesContent":["import {\n  BadGatewayException,\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\n\nimport { ReportRepository } from '../../../domain/repository';\nimport { ProjectReportId } from '../../../domain/value';\nimport { CustomLogger } from '../../../utility';\nimport {\n  ICreateProjectBudgetChangeRequest,\n  IProjectBudgetChangeResponse,\n  IUpdateProjectBudgetChangeRequest,\n} from '../../interface';\n\nimport { ProjectBudgetChangeParser } from './parser';\n\n@Injectable()\nexport class ProjectBudgetChangeScenario {\n  readonly parser: ProjectBudgetChangeParser;\n\n  constructor(\n    readonly logger: CustomLogger,\n    readonly repository: ReportRepository,\n  ) {\n    this.logger.setContext(ProjectBudgetChangeScenario.name);\n    this.parser = new ProjectBudgetChangeParser(this.logger);\n  }\n\n  async pushProjectBudgetChange(\n    input: ICreateProjectBudgetChangeRequest,\n  ): Promise<IProjectBudgetChangeResponse> {\n    try {\n      const entity = this.parser.convertToProjectReport(input);\n\n      const result = await this.repository.createProjectBudgetChange(entity);\n\n      return this.parser.convertProjectBudgetChangeToReference(result);\n    } catch (error) {\n      if (\n        [BadRequestException, BadGatewayException].includes(error.constructor)\n      ) {\n        throw error;\n      }\n\n      this.logger.error(error);\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async update(\n    id: string,\n    updateData: IUpdateProjectBudgetChangeRequest,\n  ): Promise<IProjectBudgetChangeResponse> {\n    try {\n      const entity = await this.repository.getProjectBudgetChangeById(\n        ProjectReportId.from(id),\n      );\n\n      const data = this.parser.formatDataToUpdate(\n        entity.createUserId.value,\n        updateData,\n      );\n      const updatedEntity = entity.update(data);\n\n      const result =\n        await this.repository.updateProjectBudgetChange(updatedEntity);\n\n      return this.parser.convertProjectBudgetChangeToReference(result);\n    } catch (error) {\n      if (\n        [BadRequestException, BadGatewayException, NotFoundException].includes(\n          error.constructor,\n        )\n      ) {\n        throw error;\n      }\n\n      this.logger.error(error);\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n}\n"],"names":["BadGatewayException","BadRequestException","Injectable","InternalServerErrorException","NotFoundException","ReportRepository","ProjectReportId","CustomLogger","ProjectBudgetChangeParser","ProjectBudgetChangeScenario","pushProjectBudgetChange","input","entity","parser","convertToProjectReport","result","repository","createProjectBudgetChange","convertProjectBudgetChangeToReference","error","includes","constructor","logger","message","update","id","updateData","getProjectBudgetChangeById","from","data","formatDataToUpdate","createUserId","value","updatedEntity","updateProjectBudgetChange","setContext","name"],"mappings":";;;;;;;;;AAAA,SACEA,mBAAmB,EACnBC,mBAAmB,EACnBC,UAAU,EACVC,4BAA4B,EAC5BC,iBAAiB,QACZ,iBAAiB;AAExB,SAASC,gBAAgB,QAAQ,sCAA6B;AAC9D,SAASC,eAAe,QAAQ,iCAAwB;AACxD,SAASC,YAAY,QAAQ,4BAAmB;AAOhD,SAASC,yBAAyB,QAAQ,cAAW;AAGrD,OAAO,MAAMC;IAWX,MAAMC,wBACJC,KAAwC,EACD;QACvC,IAAI;YACF,MAAMC,SAAS,IAAI,CAACC,MAAM,CAACC,sBAAsB,CAACH;YAElD,MAAMI,SAAS,MAAM,IAAI,CAACC,UAAU,CAACC,yBAAyB,CAACL;YAE/D,OAAO,IAAI,CAACC,MAAM,CAACK,qCAAqC,CAACH;QAC3D,EAAE,OAAOI,OAAO;YACd,IACE;gBAAClB;gBAAqBD;aAAoB,CAACoB,QAAQ,CAACD,MAAME,WAAW,GACrE;gBACA,MAAMF;YACR;YAEA,IAAI,CAACG,MAAM,CAACH,KAAK,CAACA;YAClB,MAAM,IAAIhB,6BAA6BgB,MAAMI,OAAO;QACtD;IACF;IAEA,MAAMC,OACJC,EAAU,EACVC,UAA6C,EACN;QACvC,IAAI;YACF,MAAMd,SAAS,MAAM,IAAI,CAACI,UAAU,CAACW,0BAA0B,CAC7DrB,gBAAgBsB,IAAI,CAACH;YAGvB,MAAMI,OAAO,IAAI,CAAChB,MAAM,CAACiB,kBAAkB,CACzClB,OAAOmB,YAAY,CAACC,KAAK,EACzBN;YAEF,MAAMO,gBAAgBrB,OAAOY,MAAM,CAACK;YAEpC,MAAMd,SACJ,MAAM,IAAI,CAACC,UAAU,CAACkB,yBAAyB,CAACD;YAElD,OAAO,IAAI,CAACpB,MAAM,CAACK,qCAAqC,CAACH;QAC3D,EAAE,OAAOI,OAAO;YACd,IACE;gBAAClB;gBAAqBD;gBAAqBI;aAAkB,CAACgB,QAAQ,CACpED,MAAME,WAAW,GAEnB;gBACA,MAAMF;YACR;YAEA,IAAI,CAACG,MAAM,CAACH,KAAK,CAACA;YAClB,MAAM,IAAIhB,6BAA6BgB,MAAMI,OAAO;QACtD;IACF;IA5DAF,YACE,AAASC,MAAoB,EAC7B,AAASN,UAA4B,CACrC;aAFSM,SAAAA;aACAN,aAAAA;QAET,IAAI,CAACM,MAAM,CAACa,UAAU,CAAC1B,4BAA4B2B,IAAI;QACvD,IAAI,CAACvB,MAAM,GAAG,IAAIL,0BAA0B,IAAI,CAACc,MAAM;IACzD;AAuDF"}