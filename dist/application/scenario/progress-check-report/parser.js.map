{"version":3,"sources":["../../../../src/application/scenario/progress-check-report/parser.ts"],"sourcesContent":["import { BadRequestException } from '@nestjs/common';\n\nimport {\n  File,\n  IUpdateProgressCheckReport,\n  ProgressCheckReport,\n} from '../../../domain/entity';\nimport {\n  ConsumedWorkersPercentage,\n  CreateUserId,\n  ExecutionBudgetUnitId,\n  FileName,\n  FilePath,\n  ProgressReportData,\n  ProjectId,\n  ProjectReportId,\n  ReportText,\n  Title,\n  TotalPerformancePercentage,\n  UploadUserId,\n  WorkerId,\n  YearMonthDay,\n} from '../../../domain/value';\nimport { CustomLogger } from '../../../utility';\nimport {\n  ICreateProgressCheckReportRequest,\n  IProgressCheckReportResponse,\n  IUpdateProgressCheckReportRequest,\n} from '../../interface';\n\nexport class ProgressCheckReportParser {\n  constructor(readonly logger: CustomLogger) {}\n  convertToProjectReport(\n    input: ICreateProgressCheckReportRequest,\n  ): ProgressCheckReport {\n    try {\n      const id = ProjectReportId.make();\n      const createUserId = CreateUserId.make();\n      const reportDate = YearMonthDay.from(input.report_date);\n      const projectId = ProjectId.from(input.project_id);\n      const uploadUserId = UploadUserId.from(createUserId.value);\n      const files = input.attached_files.map(\n        (file) =>\n          new File({\n            name: FileName.from(file.file_name),\n            path: FilePath.from(file.file_path),\n            uploadUserId,\n          }),\n      );\n      const title = Title.from(input.title ?? null);\n      const reportText = ReportText.from(input.report_text ?? null);\n      const executionBudgetUnitId = ExecutionBudgetUnitId.from(\n        input.execution_budget_unit_id,\n      );\n      const progressReportData = ProgressReportData.from(\n        input.progress_report_data,\n      );\n      const totalPerformancePercentage = input.total_performance_percentage\n        ? TotalPerformancePercentage.from(input.total_performance_percentage)\n        : TotalPerformancePercentage.new();\n      const consumedWorkersPercentage = input.consumed_workers_percentage\n        ? ConsumedWorkersPercentage.from(input.consumed_workers_percentage)\n        : ConsumedWorkersPercentage.new();\n      const workerIds = input.reported_worker_ids.map((id) =>\n        WorkerId.from(id),\n      );\n\n      return new ProgressCheckReport({\n        id,\n        createUserId,\n        reportDate,\n        projectId,\n        files,\n        title,\n        reportText,\n        executionBudgetUnitId,\n        progressReportData,\n        totalPerformancePercentage,\n        consumedWorkersPercentage,\n        workerIds,\n      });\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(error.message);\n    }\n  }\n  convertProjectReportToReference(\n    entity: ProgressCheckReport,\n  ): IProgressCheckReportResponse {\n    const {\n      id,\n      files,\n      projectId,\n      reportDate,\n      createUserId,\n      title,\n      reportText,\n      executionBudgetUnitId,\n      progressReportData,\n      totalPerformancePercentage,\n      consumedWorkersPercentage,\n      workerIds,\n    } = entity;\n\n    return {\n      id: id.value,\n      title: title.value ?? undefined,\n      report_text: reportText.value ?? undefined,\n      attached_files: files.map((file) => ({\n        file_name: file.name.value,\n        file_path: file.path.value,\n      })),\n      execution_budget_unit_id: executionBudgetUnitId.value,\n      progress_report_data: progressReportData.value,\n      total_performance_percentage: Number(\n        totalPerformancePercentage.toValue(),\n      ),\n      consumed_workers_percentage: Number(consumedWorkersPercentage.toValue()),\n      project_id: projectId.value,\n      reported_worker_ids: workerIds.map((id) => id.value),\n      report_date: reportDate.toString(),\n      create_user_id: createUserId.value,\n    };\n  }\n  private returnValueOrUndefined<E, T>(\n    value: E,\n    operation: (value: E) => T,\n  ): T | undefined {\n    if (value === undefined) {\n      return undefined;\n    }\n    return operation(value);\n  }\n  formatDataToUpdate(\n    userId: string,\n    data: IUpdateProgressCheckReportRequest,\n  ): IUpdateProgressCheckReport {\n    const uploadUserId = UploadUserId.from(userId);\n    return {\n      files: data.attached_files?.map(\n        (file) =>\n          new File({\n            name: FileName.from(file.file_name),\n            path: FilePath.from(file.file_path),\n            uploadUserId,\n          }),\n      ),\n\n      title: this.returnValueOrUndefined(data.title, Title.from),\n      reportText: this.returnValueOrUndefined(\n        data.report_text,\n        ReportText.from,\n      ),\n      executionBudgetUnitId: this.returnValueOrUndefined(\n        data.execution_budget_unit_id,\n        ExecutionBudgetUnitId.from,\n      ),\n      progressReportData: this.returnValueOrUndefined(\n        data.progress_report_data,\n        ProgressReportData.from,\n      ),\n      totalPerformancePercentage: this.returnValueOrUndefined(\n        data.total_performance_percentage,\n        TotalPerformancePercentage.from,\n      ),\n      consumedWorkersPercentage: this.returnValueOrUndefined(\n        data.consumed_workers_percentage,\n        ConsumedWorkersPercentage.from,\n      ),\n      workerIds: data.reported_worker_ids?.map(WorkerId.from),\n      reportDate: this.returnValueOrUndefined(\n        data.report_date,\n        YearMonthDay.from,\n      ),\n    };\n  }\n}\n"],"names":["BadRequestException","File","ProgressCheckReport","ConsumedWorkersPercentage","CreateUserId","ExecutionBudgetUnitId","FileName","FilePath","ProgressReportData","ProjectId","ProjectReportId","ReportText","Title","TotalPerformancePercentage","UploadUserId","WorkerId","YearMonthDay","ProgressCheckReportParser","convertToProjectReport","input","id","make","createUserId","reportDate","from","report_date","projectId","project_id","uploadUserId","value","files","attached_files","map","file","name","file_name","path","file_path","title","reportText","report_text","executionBudgetUnitId","execution_budget_unit_id","progressReportData","progress_report_data","totalPerformancePercentage","total_performance_percentage","new","consumedWorkersPercentage","consumed_workers_percentage","workerIds","reported_worker_ids","error","logger","message","convertProjectReportToReference","entity","undefined","Number","toValue","toString","create_user_id","returnValueOrUndefined","operation","formatDataToUpdate","userId","data","constructor"],"mappings":"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"}