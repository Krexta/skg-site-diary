{"version":3,"sources":["../../../../src/application/scenario/project-status-update-report/scenario.ts"],"sourcesContent":["import {\n  BadGatewayException,\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\n\nimport { ReportRepository } from '../../../domain/repository';\nimport { ProjectReportId } from '../../../domain/value';\nimport { CustomLogger } from '../../../utility';\nimport {\n  ICreateProjectStatusUpdateReportRequest,\n  IProjectStatusUpdateReportResponse,\n  IUpdateProjectStatusUpdateReportRequest,\n} from '../../interface';\n\nimport { ProjectStatusUpdateReportParser } from './parser';\n\n@Injectable()\nexport class ProjectStatusUpdateReportScenario {\n  readonly parser: ProjectStatusUpdateReportParser;\n\n  constructor(\n    readonly logger: CustomLogger,\n    readonly repository: ReportRepository,\n  ) {\n    this.logger.setContext(ProjectStatusUpdateReportScenario.name);\n    this.parser = new ProjectStatusUpdateReportParser(this.logger);\n  }\n\n  async pushProjectStatusUpdateReport(\n    input: ICreateProjectStatusUpdateReportRequest,\n  ): Promise<IProjectStatusUpdateReportResponse> {\n    try {\n      const entity = this.parser.convertToProjectReport(input);\n\n      const result =\n        await this.repository.createProjectStatusUpdateReport(entity);\n\n      return this.parser.convertProjectReportToReference(result);\n    } catch (error) {\n      if (\n        [BadRequestException, BadGatewayException].includes(error.constructor)\n      ) {\n        throw error;\n      }\n\n      this.logger.error(error);\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async update(\n    id: string,\n    updateData: IUpdateProjectStatusUpdateReportRequest,\n  ): Promise<IProjectStatusUpdateReportResponse> {\n    try {\n      const entity = await this.repository.getProjectStatusUpdateReportById(\n        ProjectReportId.from(id),\n      );\n\n      const data = this.parser.formatDataToUpdate(\n        entity.createUserId.value,\n        updateData,\n      );\n      const updatedEntity = entity.update(data);\n\n      const result =\n        await this.repository.updateProjectStatusUpdateReport(updatedEntity);\n\n      return this.parser.convertProjectReportToReference(result);\n    } catch (error) {\n      if (\n        [BadRequestException, BadGatewayException, NotFoundException].includes(\n          error.constructor,\n        )\n      ) {\n        throw error;\n      }\n\n      this.logger.error(error);\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n}\n"],"names":["BadGatewayException","BadRequestException","Injectable","InternalServerErrorException","NotFoundException","ReportRepository","ProjectReportId","CustomLogger","ProjectStatusUpdateReportParser","ProjectStatusUpdateReportScenario","pushProjectStatusUpdateReport","input","entity","parser","convertToProjectReport","result","repository","createProjectStatusUpdateReport","convertProjectReportToReference","error","includes","constructor","logger","message","update","id","updateData","getProjectStatusUpdateReportById","from","data","formatDataToUpdate","createUserId","value","updatedEntity","updateProjectStatusUpdateReport","setContext","name"],"mappings":";;;;;;;;;AAAA,SACEA,mBAAmB,EACnBC,mBAAmB,EACnBC,UAAU,EACVC,4BAA4B,EAC5BC,iBAAiB,QACZ,iBAAiB;AAExB,SAASC,gBAAgB,QAAQ,sCAA6B;AAC9D,SAASC,eAAe,QAAQ,iCAAwB;AACxD,SAASC,YAAY,QAAQ,4BAAmB;AAOhD,SAASC,+BAA+B,QAAQ,cAAW;AAG3D,OAAO,MAAMC;IAWX,MAAMC,8BACJC,KAA8C,EACD;QAC7C,IAAI;YACF,MAAMC,SAAS,IAAI,CAACC,MAAM,CAACC,sBAAsB,CAACH;YAElD,MAAMI,SACJ,MAAM,IAAI,CAACC,UAAU,CAACC,+BAA+B,CAACL;YAExD,OAAO,IAAI,CAACC,MAAM,CAACK,+BAA+B,CAACH;QACrD,EAAE,OAAOI,OAAO;YACd,IACE;gBAAClB;gBAAqBD;aAAoB,CAACoB,QAAQ,CAACD,MAAME,WAAW,GACrE;gBACA,MAAMF;YACR;YAEA,IAAI,CAACG,MAAM,CAACH,KAAK,CAACA;YAClB,MAAM,IAAIhB,6BAA6BgB,MAAMI,OAAO;QACtD;IACF;IAEA,MAAMC,OACJC,EAAU,EACVC,UAAmD,EACN;QAC7C,IAAI;YACF,MAAMd,SAAS,MAAM,IAAI,CAACI,UAAU,CAACW,gCAAgC,CACnErB,gBAAgBsB,IAAI,CAACH;YAGvB,MAAMI,OAAO,IAAI,CAAChB,MAAM,CAACiB,kBAAkB,CACzClB,OAAOmB,YAAY,CAACC,KAAK,EACzBN;YAEF,MAAMO,gBAAgBrB,OAAOY,MAAM,CAACK;YAEpC,MAAMd,SACJ,MAAM,IAAI,CAACC,UAAU,CAACkB,+BAA+B,CAACD;YAExD,OAAO,IAAI,CAACpB,MAAM,CAACK,+BAA+B,CAACH;QACrD,EAAE,OAAOI,OAAO;YACd,IACE;gBAAClB;gBAAqBD;gBAAqBI;aAAkB,CAACgB,QAAQ,CACpED,MAAME,WAAW,GAEnB;gBACA,MAAMF;YACR;YAEA,IAAI,CAACG,MAAM,CAACH,KAAK,CAACA;YAClB,MAAM,IAAIhB,6BAA6BgB,MAAMI,OAAO;QACtD;IACF;IA7DAF,YACE,AAASC,MAAoB,EAC7B,AAASN,UAA4B,CACrC;aAFSM,SAAAA;aACAN,aAAAA;QAET,IAAI,CAACM,MAAM,CAACa,UAAU,CAAC1B,kCAAkC2B,IAAI;QAC7D,IAAI,CAACvB,MAAM,GAAG,IAAIL,gCAAgC,IAAI,CAACc,MAAM;IAC/D;AAwDF"}