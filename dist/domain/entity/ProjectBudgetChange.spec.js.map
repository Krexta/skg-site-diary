{"version":3,"sources":["../../../src/domain/entity/ProjectBudgetChange.spec.ts"],"sourcesContent":["import { format } from 'date-fns';\nimport fc from 'fast-check';\nimport { describe, expect, it } from 'vitest';\n\nimport {\n  BillingClientId,\n  CHANGE_REASON_CODE_LIST,\n  ChangeReasonCode,\n  CreateUserId,\n  FileName,\n  FilePath,\n  ProjectId,\n  ProjectReportId,\n  ReportText,\n  Title,\n  UploadUserId,\n  YEAR_MONTH_DAY_FORMAT,\n  YearMonthDay,\n} from '../value';\nimport { MAX_FILE_NAME_LENGTH } from '../value/String/BaseString';\n\nimport {\n  File,\n  IProjectBudgetChange,\n  IUpdateProjectBudgetChange,\n  ProjectBudgetChange,\n  UpdateProjectBudgetChange,\n} from '.';\n\nfunction makeCreateProperty() {\n  return fc\n    .record({\n      id: fc.uuid({ version: 7 }),\n      createUserId: fc.uuid({ version: 7 }),\n      reportDate: fc\n        .date({\n          min: new Date(0, 0, 0, 0, 0, 0),\n          max: new Date(9998, 12, 31, 23, 59, 59),\n        })\n        .map((val) => format(val, YEAR_MONTH_DAY_FORMAT)),\n      projectId: fc.uuid({ version: 7 }),\n      files: fc.array(\n        fc.record({\n          name: fc\n            .string({ minLength: 1, maxLength: MAX_FILE_NAME_LENGTH })\n            .map((val) => val.trim())\n            .filter((val) => val.length >= 1),\n          path: fc.webUrl(),\n          uploadUserId: fc.uuid({ version: 7 }),\n        }),\n        { minLength: 1 },\n      ),\n      title: fc\n        .string({ minLength: 1 })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      reportText: fc\n        .string({ minLength: 1 })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      changeReasonCode: fc.constantFrom(...CHANGE_REASON_CODE_LIST),\n      billingClientId: fc.uuid({ version: 7 }),\n    })\n    .map<IProjectBudgetChange>(\n      ({\n        id,\n        createUserId,\n        reportDate,\n        projectId,\n        files,\n        title,\n        reportText,\n        changeReasonCode,\n        billingClientId,\n      }) => ({\n        id: ProjectReportId.from(id),\n        createUserId: CreateUserId.from(createUserId),\n        reportDate: YearMonthDay.from(reportDate),\n        projectId: ProjectId.from(projectId),\n        files: files.map(\n          (file) =>\n            new File({\n              name: FileName.from(file.name),\n              path: FilePath.from(file.path),\n              uploadUserId: UploadUserId.from(file.uploadUserId),\n            }),\n        ),\n        title: Title.from(title),\n        reportText: ReportText.from(reportText),\n        changeReasonCode: ChangeReasonCode.from(changeReasonCode),\n        billingClientId: BillingClientId.from(billingClientId),\n      }),\n    );\n}\nfunction makeUpdateProperty() {\n  return fc\n    .record({\n      createUserId: fc.option(fc.uuid({ version: 7 }), { nil: undefined }),\n      reportDate: fc.option(\n        fc\n          .date({\n            min: new Date(0, 0, 0, 0, 0, 0),\n            max: new Date(9998, 12, 31, 23, 59, 59),\n          })\n          .map((val) => format(val, YEAR_MONTH_DAY_FORMAT)),\n        { nil: undefined },\n      ),\n      projectId: fc.option(fc.uuid({ version: 7 }), { nil: undefined }),\n      files: fc.option(\n        fc.array(\n          fc.record({\n            name: fc\n              .string({ minLength: 1, maxLength: MAX_FILE_NAME_LENGTH })\n              .map((val) => val.trim())\n              .filter((val) => val.length >= 1),\n            path: fc.webUrl(),\n            uploadUserId: fc.uuid({ version: 7 }),\n          }),\n          { minLength: 1 },\n        ),\n        { nil: undefined },\n      ),\n      title: fc.option(\n        fc\n          .string({ minLength: 1 })\n          .map((val) => val.trim())\n          .filter((val) => val.length >= 1),\n        { nil: undefined },\n      ),\n      reportText: fc.option(\n        fc\n          .string({ minLength: 1 })\n          .map((val) => val.trim())\n          .filter((val) => val.length >= 1),\n        { nil: undefined },\n      ),\n      changeReasonCode: fc.option(fc.constantFrom(...CHANGE_REASON_CODE_LIST), {\n        nil: undefined,\n      }),\n      billingClientId: fc.option(fc.uuid({ version: 7 }), { nil: undefined }),\n    })\n    .map<IUpdateProjectBudgetChange>(\n      ({\n        createUserId,\n        reportDate,\n        projectId,\n        files,\n        title,\n        reportText,\n        changeReasonCode,\n        billingClientId,\n      }) => ({\n        createUserId: createUserId\n          ? CreateUserId.from(createUserId)\n          : undefined,\n        reportDate: reportDate ? YearMonthDay.from(reportDate) : undefined,\n        projectId: projectId ? ProjectId.from(projectId) : undefined,\n        files: files?.map(\n          (file) =>\n            new File({\n              name: FileName.from(file.name),\n              path: FilePath.from(file.path),\n              uploadUserId: UploadUserId.from(file.uploadUserId),\n            }),\n        ),\n        title: title ? Title.from(title) : undefined,\n        reportText: reportText ? ReportText.from(reportText) : undefined,\n        changeReasonCode: changeReasonCode\n          ? ChangeReasonCode.from(changeReasonCode)\n          : undefined,\n        billingClientId: billingClientId\n          ? BillingClientId.from(billingClientId)\n          : undefined,\n      }),\n    );\n}\n\ndescribe('ProjectBudgetChange', () => {\n  it('should return ProjectBudgetChange when input is valid', () => {\n    fc.assert(\n      fc.property(makeCreateProperty(), (args) => {\n        const entity = new ProjectBudgetChange(args);\n        expect(entity).toBeInstanceOf(ProjectBudgetChange);\n\n        expect(entity.id.value).toEqual(args.id.value);\n        expect(entity.createUserId.value).toEqual(args.createUserId.value);\n        expect(entity.reportDate.toString()).toEqual(\n          args.reportDate.toString(),\n        );\n        expect(entity.projectId.value).toEqual(args.projectId.value);\n        expect(entity.files).toEqual(expect.arrayContaining(args.files));\n        expect(entity.title.value).toEqual(args.title.value);\n        expect(entity.reportText.value).toEqual(args.reportText.value);\n        expect(entity.changeReasonCode.value).toEqual(\n          args.changeReasonCode.value,\n        );\n        expect(entity.billingClientId.value).toEqual(\n          args.billingClientId.value,\n        );\n      }),\n    );\n  });\n  describe('update', () => {\n    it('should return UpdateProjectBudgetChange when input is valid', () => {\n      fc.assert(\n        fc.property(\n          fc.record({\n            createArgs: makeCreateProperty(),\n            updateArgs: makeUpdateProperty(),\n          }),\n          ({ createArgs, updateArgs }) => {\n            const entity = new ProjectBudgetChange(createArgs);\n            expect(entity).toBeInstanceOf(ProjectBudgetChange);\n\n            const update = entity.update(updateArgs);\n            expect(update).toBeInstanceOf(UpdateProjectBudgetChange);\n            expect(update.id.value).toEqual(entity.id.value);\n            expect(update.createUserId?.value).toEqual(\n              updateArgs.createUserId?.value,\n            );\n            expect(update.reportDate?.toString()).toEqual(\n              updateArgs.reportDate?.toString(),\n            );\n            if (updateArgs.files) {\n              expect(update.files).toEqual(\n                expect.arrayContaining(updateArgs.files),\n              );\n            } else {\n              expect(update.files).toBeUndefined();\n            }\n            expect(update.title?.value).toEqual(updateArgs.title?.value);\n            expect(update.reportText?.value).toEqual(\n              updateArgs.reportText?.value,\n            );\n            expect(update.changeReasonCode?.value).toEqual(\n              updateArgs.changeReasonCode?.value,\n            );\n            expect(update.billingClientId?.value).toEqual(\n              updateArgs.billingClientId?.value,\n            );\n          },\n        ),\n      );\n    });\n  });\n});\n"],"names":["format","fc","describe","expect","it","BillingClientId","CHANGE_REASON_CODE_LIST","ChangeReasonCode","CreateUserId","FileName","FilePath","ProjectId","ProjectReportId","ReportText","Title","UploadUserId","YEAR_MONTH_DAY_FORMAT","YearMonthDay","MAX_FILE_NAME_LENGTH","File","ProjectBudgetChange","UpdateProjectBudgetChange","makeCreateProperty","record","id","uuid","version","createUserId","reportDate","date","min","Date","max","map","val","projectId","files","array","name","string","minLength","maxLength","trim","filter","length","path","webUrl","uploadUserId","title","reportText","changeReasonCode","constantFrom","billingClientId","from","file","makeUpdateProperty","option","nil","undefined","assert","property","args","entity","toBeInstanceOf","value","toEqual","toString","arrayContaining","createArgs","updateArgs","update","toBeUndefined"],"mappings":"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"}