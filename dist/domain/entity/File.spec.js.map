{"version":3,"sources":["../../../src/domain/entity/File.spec.ts"],"sourcesContent":["import fc from 'fast-check';\nimport { describe, expect, it } from 'vitest';\n\nimport { FileName, FilePath, UploadUserId } from '../value';\nimport { MAX_FILE_NAME_LENGTH } from '../value/String/BaseString';\n\nimport { File } from './File';\n\nfunction createProperty() {\n  return fc\n    .record({\n      name: fc\n        .string({ minLength: 1, maxLength: MAX_FILE_NAME_LENGTH })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      path: fc\n        .string({ minLength: 1 })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      uploadUserId: fc.uuid({ version: 7 }),\n    })\n    .map<File>(({ name, path, uploadUserId }) => ({\n      name: FileName.from(name),\n      path: FilePath.from(path),\n      uploadUserId: UploadUserId.from(uploadUserId),\n    }));\n}\n\ndescribe('File', () => {\n  it('Should return File when input is valid', () => {\n    fc.assert(\n      fc.property(createProperty(), (args: File) => {\n        const entity = new File(args);\n\n        expect(entity).toBeInstanceOf(File);\n        expect(entity.name.value).toEqual(args.name.value);\n        expect(entity.path.value).toEqual(args.path.value);\n        expect(entity.uploadUserId.value).toEqual(args.uploadUserId.value);\n      }),\n    );\n  });\n});\n"],"names":["fc","describe","expect","it","FileName","FilePath","UploadUserId","MAX_FILE_NAME_LENGTH","File","createProperty","record","name","string","minLength","maxLength","map","val","trim","filter","length","path","uploadUserId","uuid","version","from","assert","property","args","entity","toBeInstanceOf","value","toEqual"],"mappings":"AAAA,OAAOA,QAAQ,aAAa;AAC5B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,QAAQ,SAAS;AAE9C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,oBAAW;AAC5D,SAASC,oBAAoB,QAAQ,gCAA6B;AAElE,SAASC,IAAI,QAAQ,YAAS;AAE9B,SAASC;IACP,OAAOT,GACJU,MAAM,CAAC;QACNC,MAAMX,GACHY,MAAM,CAAC;YAAEC,WAAW;YAAGC,WAAWP;QAAqB,GACvDQ,GAAG,CAAC,CAACC,MAAQA,IAAIC,IAAI,IACrBC,MAAM,CAAC,CAACF,MAAQA,IAAIG,MAAM,IAAI;QACjCC,MAAMpB,GACHY,MAAM,CAAC;YAAEC,WAAW;QAAE,GACtBE,GAAG,CAAC,CAACC,MAAQA,IAAIC,IAAI,IACrBC,MAAM,CAAC,CAACF,MAAQA,IAAIG,MAAM,IAAI;QACjCE,cAAcrB,GAAGsB,IAAI,CAAC;YAAEC,SAAS;QAAE;IACrC,GACCR,GAAG,CAAO,CAAC,EAAEJ,IAAI,EAAES,IAAI,EAAEC,YAAY,EAAE,GAAM,CAAA;YAC5CV,MAAMP,SAASoB,IAAI,CAACb;YACpBS,MAAMf,SAASmB,IAAI,CAACJ;YACpBC,cAAcf,aAAakB,IAAI,CAACH;QAClC,CAAA;AACJ;AAEApB,SAAS,QAAQ;IACfE,GAAG,0CAA0C;QAC3CH,GAAGyB,MAAM,CACPzB,GAAG0B,QAAQ,CAACjB,kBAAkB,CAACkB;YAC7B,MAAMC,SAAS,IAAIpB,KAAKmB;YAExBzB,OAAO0B,QAAQC,cAAc,CAACrB;YAC9BN,OAAO0B,OAAOjB,IAAI,CAACmB,KAAK,EAAEC,OAAO,CAACJ,KAAKhB,IAAI,CAACmB,KAAK;YACjD5B,OAAO0B,OAAOR,IAAI,CAACU,KAAK,EAAEC,OAAO,CAACJ,KAAKP,IAAI,CAACU,KAAK;YACjD5B,OAAO0B,OAAOP,YAAY,CAACS,KAAK,EAAEC,OAAO,CAACJ,KAAKN,YAAY,CAACS,KAAK;QACnE;IAEJ;AACF"}