{"version":3,"sources":["../../../src/domain/entity/ProjectCloseReport.spec.ts"],"sourcesContent":["import { format } from 'date-fns';\nimport fc from 'fast-check';\nimport { describe, expect, it } from 'vitest';\n\nimport {\n  CloseReportChecklist,\n  CreateUserId,\n  FileName,\n  FilePath,\n  ProjectId,\n  ProjectReportId,\n  ReportText,\n  Title,\n  UploadUserId,\n  YEAR_MONTH_DAY_FORMAT,\n  YearMonthDay,\n} from '../value';\nimport { MAX_FILE_NAME_LENGTH } from '../value/String/BaseString';\n\nimport {\n  File,\n  IProjectCloseReport,\n  IUpdateProjectCloseReport,\n  ProjectCloseReport,\n  UpdateProjectCloseReport,\n} from '.';\n\nfunction makeCreateProperty() {\n  return fc\n    .record({\n      id: fc.uuid({ version: 7 }),\n      createUserId: fc.uuid({ version: 7 }),\n      reportDate: fc\n        .date({\n          min: new Date(0, 0, 0, 0, 0, 0),\n          max: new Date(9998, 12, 31, 23, 59, 59),\n        })\n        .map((val) => format(val, YEAR_MONTH_DAY_FORMAT)),\n      projectId: fc.uuid({ version: 7 }),\n      files: fc.array(\n        fc.record({\n          name: fc\n            .string({ minLength: 1, maxLength: MAX_FILE_NAME_LENGTH })\n            .map((val) => val.trim())\n            .filter((val) => val.length >= 1),\n          path: fc.webUrl(),\n          uploadUserId: fc.uuid({ version: 7 }),\n        }),\n        { minLength: 1 },\n      ),\n      title: fc\n        .string({ minLength: 1 })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      reportText: fc\n        .string({ minLength: 1 })\n        .map((val) => val.trim())\n        .filter((val) => val.length >= 1),\n      closeReportChecklist: fc.object({\n        key: fc\n          .string({ maxLength: 20 })\n          .filter(\n            (val) =>\n              ![\n                'constructor',\n                'toString',\n                'hasOwnProperty',\n                'valueOf',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                '__proto__',\n              ].includes(val),\n          ),\n        values: [fc.string({ maxLength: 256 })],\n        maxDepth: 2,\n        maxKeys: 5,\n      }),\n    })\n    .map<IProjectCloseReport>(\n      ({\n        id,\n        createUserId,\n        reportDate,\n        projectId,\n        files,\n        title,\n        reportText,\n        closeReportChecklist,\n      }) => ({\n        id: ProjectReportId.from(id),\n        createUserId: CreateUserId.from(createUserId),\n        reportDate: YearMonthDay.from(reportDate),\n        projectId: ProjectId.from(projectId),\n        files: files.map(\n          (file) =>\n            new File({\n              name: FileName.from(file.name),\n              path: FilePath.from(file.path),\n              uploadUserId: UploadUserId.from(file.uploadUserId),\n            }),\n        ),\n        title: Title.from(title),\n        reportText: ReportText.from(reportText),\n        closeReportChecklist: CloseReportChecklist.from(closeReportChecklist),\n      }),\n    );\n}\nfunction makeUpdateProperty() {\n  return fc\n    .record({\n      createUserId: fc.option(fc.uuid({ version: 7 }), { nil: undefined }),\n      reportDate: fc.option(\n        fc\n          .date({\n            min: new Date(0, 0, 0, 0, 0, 0),\n            max: new Date(9998, 12, 31, 23, 59, 59),\n          })\n          .map((val) => format(val, YEAR_MONTH_DAY_FORMAT)),\n        { nil: undefined },\n      ),\n      projectId: fc.option(fc.uuid({ version: 7 }), { nil: undefined }),\n      files: fc.option(\n        fc.array(\n          fc.record({\n            name: fc\n              .string({ minLength: 1, maxLength: MAX_FILE_NAME_LENGTH })\n              .map((val) => val.trim())\n              .filter((val) => val.length >= 1),\n            path: fc.webUrl(),\n            uploadUserId: fc.uuid({ version: 7 }),\n          }),\n          { minLength: 1 },\n        ),\n        { nil: undefined },\n      ),\n      title: fc.option(\n        fc\n          .string({ minLength: 1 })\n          .map((val) => val.trim())\n          .filter((val) => val.length >= 1),\n        { nil: undefined },\n      ),\n      reportText: fc.option(\n        fc\n          .string({ minLength: 1 })\n          .map((val) => val.trim())\n          .filter((val) => val.length >= 1),\n        { nil: undefined },\n      ),\n      closeReportChecklist: fc.option(\n        fc.object({\n          key: fc\n            .string({ maxLength: 20 })\n            .filter(\n              (val) =>\n                ![\n                  'constructor',\n                  'toString',\n                  'hasOwnProperty',\n                  'valueOf',\n                  'isPrototypeOf',\n                  'propertyIsEnumerable',\n                  '__proto__',\n                ].includes(val),\n            ),\n          values: [fc.string({ maxLength: 256 })],\n          maxDepth: 2,\n          maxKeys: 5,\n        }),\n        { nil: undefined },\n      ),\n    })\n    .map<IUpdateProjectCloseReport>(\n      ({\n        createUserId,\n        reportDate,\n        projectId,\n        files,\n        title,\n        reportText,\n        closeReportChecklist,\n      }) => ({\n        createUserId: createUserId\n          ? CreateUserId.from(createUserId)\n          : undefined,\n        reportDate: reportDate ? YearMonthDay.from(reportDate) : undefined,\n        projectId: projectId ? ProjectId.from(projectId) : undefined,\n        files: files?.map(\n          (file) =>\n            new File({\n              name: FileName.from(file.name),\n              path: FilePath.from(file.path),\n              uploadUserId: UploadUserId.from(file.uploadUserId),\n            }),\n        ),\n        title: title ? Title.from(title) : undefined,\n        reportText: reportText ? ReportText.from(reportText) : undefined,\n        closeReportChecklist: closeReportChecklist\n          ? CloseReportChecklist.from(closeReportChecklist)\n          : undefined,\n      }),\n    );\n}\n\ndescribe('ProjectCloseReport', () => {\n  it('should return ProjectCloseReport when input is valid', () => {\n    fc.assert(\n      fc.property(makeCreateProperty(), (args) => {\n        const entity = new ProjectCloseReport(args);\n        expect(entity).toBeInstanceOf(ProjectCloseReport);\n\n        expect(entity.id.value).toEqual(args.id.value);\n        expect(entity.createUserId.value).toEqual(args.createUserId.value);\n        expect(entity.reportDate.toString()).toEqual(\n          args.reportDate.toString(),\n        );\n        expect(entity.projectId.value).toEqual(args.projectId.value);\n        expect(entity.files).toEqual(expect.arrayContaining(args.files));\n        expect(entity.title.value).toEqual(args.title.value);\n        expect(entity.reportText.value).toEqual(args.reportText.value);\n        expect(entity.closeReportChecklist.value).toEqual(\n          args.closeReportChecklist.value,\n        );\n      }),\n    );\n  });\n  describe('update', () => {\n    it('should return UpdateProjectCloseReport when input is valid', () => {\n      fc.assert(\n        fc.property(\n          fc.record({\n            createArgs: makeCreateProperty(),\n            updateArgs: makeUpdateProperty(),\n          }),\n          ({ createArgs, updateArgs }) => {\n            const entity = new ProjectCloseReport(createArgs);\n            expect(entity).toBeInstanceOf(ProjectCloseReport);\n\n            const update = entity.update(updateArgs);\n            expect(update).toBeInstanceOf(UpdateProjectCloseReport);\n            expect(update.id.value).toEqual(entity.id.value);\n            expect(update.createUserId?.value).toEqual(\n              updateArgs.createUserId?.value,\n            );\n            expect(update.reportDate?.toString()).toEqual(\n              updateArgs.reportDate?.toString(),\n            );\n            if (updateArgs.files) {\n              expect(update.files).toEqual(\n                expect.arrayContaining(updateArgs.files),\n              );\n            } else {\n              expect(update.files).toBeUndefined();\n            }\n            expect(update.title?.value).toEqual(updateArgs.title?.value);\n            expect(update.reportText?.value).toEqual(\n              updateArgs.reportText?.value,\n            );\n            expect(update.closeReportChecklist?.value).toEqual(\n              updateArgs.closeReportChecklist?.value,\n            );\n          },\n        ),\n      );\n    });\n  });\n});\n"],"names":["format","fc","describe","expect","it","CloseReportChecklist","CreateUserId","FileName","FilePath","ProjectId","ProjectReportId","ReportText","Title","UploadUserId","YEAR_MONTH_DAY_FORMAT","YearMonthDay","MAX_FILE_NAME_LENGTH","File","ProjectCloseReport","UpdateProjectCloseReport","makeCreateProperty","record","id","uuid","version","createUserId","reportDate","date","min","Date","max","map","val","projectId","files","array","name","string","minLength","maxLength","trim","filter","length","path","webUrl","uploadUserId","title","reportText","closeReportChecklist","object","key","includes","values","maxDepth","maxKeys","from","file","makeUpdateProperty","option","nil","undefined","assert","property","args","entity","toBeInstanceOf","value","toEqual","toString","arrayContaining","createArgs","updateArgs","update","toBeUndefined"],"mappings":"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"}