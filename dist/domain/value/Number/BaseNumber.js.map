{"version":3,"sources":["../../../../src/domain/value/Number/BaseNumber.ts"],"sourcesContent":["import { BaseValueObject } from '../Base';\n\nexport const CONSUMED_WORKERS_PERCENTAGE_PRECISION = 3;\nexport const CONSUMED_WORKERS_PERCENTAGE_SCALE = 2;\nexport const TOTAL_PERFORMANCE_PERCENTAGE_PRECISION = 3;\nexport const TOTAL_PERFORMANCE_PERCENTAGE_SCALE = 1;\n\nexport type DecimalOption = {\n  value: string;\n  precision: number;\n  scale: number;\n};\n\nabstract class Decimal<T extends string> extends BaseValueObject<\n  T,\n  DecimalOption\n> {\n  private isValidDecimal(\n    stringValue: string,\n    maxDigits: number,\n    maxDecimals: number,\n  ): boolean {\n    // Reject scientific notation (e.g., 2222e10)\n    if (stringValue.includes('e') || stringValue.includes('E')) {\n      return false;\n    }\n\n    // Dynamic regex for DECIMAL(X,Y)\n    const decimalRegex = new RegExp(\n      `^-?[0-9]{1,${maxDigits - maxDecimals}}(\\\\.[0-9]{1,${maxDecimals}})?$`,\n    );\n\n    if (!decimalRegex.test(stringValue)) {\n      return false;\n    }\n\n    // Check range constraints (optional)\n    const maxValue = Math.pow(10, maxDigits) - Math.pow(10, -maxDecimals);\n    const minValue = -Math.pow(10, maxDigits) + Math.pow(10, -maxDecimals);\n\n    return Number(stringValue) >= minValue && Number(stringValue) <= maxValue;\n  }\n\n  protected validate(val: DecimalOption): DecimalOption {\n    const { value, precision, scale } = val;\n    if (value !== null) {\n      if (Number.isNaN(Number(val.value))) {\n        throw new Error(`${this.constructor.name} must be number`);\n      }\n\n      if (!this.isValidDecimal(value, precision, scale)) {\n        throw new Error(\n          `${this.constructor.name} must be Decimal(${precision},${scale})`,\n        );\n      }\n    }\n\n    return val;\n  }\n\n  equals(other: Decimal<T>): boolean {\n    return (\n      this === other ||\n      (this._value.value === other._value.value &&\n        this._value.precision === this._value.precision &&\n        this._value.scale === this._value.scale)\n    );\n  }\n\n  toValue(): string {\n    return this._value.value;\n  }\n}\n\nexport abstract class PositiveDecimal<T extends string> extends Decimal<T> {\n  protected validate(val: DecimalOption): DecimalOption {\n    val = super.validate(val);\n    if (val.value !== null && Number(val.value) < 0) {\n      throw new Error(`${this.constructor.name} must be positive`);\n    }\n    return val;\n  }\n}\n"],"names":["BaseValueObject","CONSUMED_WORKERS_PERCENTAGE_PRECISION","CONSUMED_WORKERS_PERCENTAGE_SCALE","TOTAL_PERFORMANCE_PERCENTAGE_PRECISION","TOTAL_PERFORMANCE_PERCENTAGE_SCALE","Decimal","isValidDecimal","stringValue","maxDigits","maxDecimals","includes","decimalRegex","RegExp","test","maxValue","Math","pow","minValue","Number","validate","val","value","precision","scale","isNaN","Error","constructor","name","equals","other","_value","toValue","PositiveDecimal"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAU;AAE1C,OAAO,MAAMC,wCAAwC,EAAE;AACvD,OAAO,MAAMC,oCAAoC,EAAE;AACnD,OAAO,MAAMC,yCAAyC,EAAE;AACxD,OAAO,MAAMC,qCAAqC,EAAE;AAQpD,IAAA,AAAeC,UAAf,MAAeA,gBAAkCL;IAIvCM,eACNC,WAAmB,EACnBC,SAAiB,EACjBC,WAAmB,EACV;QACT,6CAA6C;QAC7C,IAAIF,YAAYG,QAAQ,CAAC,QAAQH,YAAYG,QAAQ,CAAC,MAAM;YAC1D,OAAO;QACT;QAEA,iCAAiC;QACjC,MAAMC,eAAe,IAAIC,OACvB,CAAC,WAAW,EAAEJ,YAAYC,YAAY,aAAa,EAAEA,YAAY,IAAI,CAAC;QAGxE,IAAI,CAACE,aAAaE,IAAI,CAACN,cAAc;YACnC,OAAO;QACT;QAEA,qCAAqC;QACrC,MAAMO,WAAWC,KAAKC,GAAG,CAAC,IAAIR,aAAaO,KAAKC,GAAG,CAAC,IAAI,CAACP;QACzD,MAAMQ,WAAW,CAACF,KAAKC,GAAG,CAAC,IAAIR,aAAaO,KAAKC,GAAG,CAAC,IAAI,CAACP;QAE1D,OAAOS,OAAOX,gBAAgBU,YAAYC,OAAOX,gBAAgBO;IACnE;IAEUK,SAASC,GAAkB,EAAiB;QACpD,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGH;QACpC,IAAIC,UAAU,MAAM;YAClB,IAAIH,OAAOM,KAAK,CAACN,OAAOE,IAAIC,KAAK,IAAI;gBACnC,MAAM,IAAII,MAAM,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,eAAe,CAAC;YAC3D;YAEA,IAAI,CAAC,IAAI,CAACrB,cAAc,CAACe,OAAOC,WAAWC,QAAQ;gBACjD,MAAM,IAAIE,MACR,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,iBAAiB,EAAEL,UAAU,CAAC,EAAEC,MAAM,CAAC,CAAC;YAErE;QACF;QAEA,OAAOH;IACT;IAEAQ,OAAOC,KAAiB,EAAW;QACjC,OACE,IAAI,KAAKA,SACR,IAAI,CAACC,MAAM,CAACT,KAAK,KAAKQ,MAAMC,MAAM,CAACT,KAAK,IACvC,IAAI,CAACS,MAAM,CAACR,SAAS,KAAK,IAAI,CAACQ,MAAM,CAACR,SAAS,IAC/C,IAAI,CAACQ,MAAM,CAACP,KAAK,KAAK,IAAI,CAACO,MAAM,CAACP,KAAK;IAE7C;IAEAQ,UAAkB;QAChB,OAAO,IAAI,CAACD,MAAM,CAACT,KAAK;IAC1B;AACF;AAEA,OAAO,MAAeW,wBAA0C3B;IACpDc,SAASC,GAAkB,EAAiB;QACpDA,MAAM,KAAK,CAACD,SAASC;QACrB,IAAIA,IAAIC,KAAK,KAAK,QAAQH,OAAOE,IAAIC,KAAK,IAAI,GAAG;YAC/C,MAAM,IAAII,MAAM,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,iBAAiB,CAAC;QAC7D;QACA,OAAOP;IACT;AACF"}